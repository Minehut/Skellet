import org.apache.tools.ant.filters.ReplaceTokens
apply plugin: 'java-library'
apply plugin: 'eclipse'

jar.archiveName = project.name + '.jar'

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()

	// Spigot
	maven {
		url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
	}

	// ProtocolLib
	maven {
		url 'http://repo.dmulloy2.net/nexus/repository/public/'
	}

	// Citizens
	maven {
		url "http://repo.citizensnpcs.co/"
	}

	// Bungeecord
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots/"
	}

	maven {
		url 'https://jitpack.io'
	}

}

dependencies {

	// Spigot
	implementation (group: 'org.spigotmc', name: 'spigot-api', version: '1.16.1-R0.1-SNAPSHOT')

	// Citizens
	implementation (group: 'net.citizensnpcs', name: 'citizensapi', version: '2.0.24-SNAPSHOT')

	//Nullable annotation
	implementation (group: 'org.eclipse.jdt', name: 'org.eclipse.jdt.annotation', version: '1.1.0')

	//Skript
	implementation (group: 'com.github.SkriptLang', name: 'Skript', version: '2.5-beta2') {
		transitive = false
	}

	// CorpseReborn
	implementation (group: 'org.golde.bukkit.corpsereborn', name: 'CorpseReborn', version: '2.14.0')

	// LibsDisguises
	implementation (group: 'com.github.libraryaddict', name: 'LibsDisguises', version: 'master-SNAPSHOT')

	implementation (group: 'io.netty', name: 'netty-all', version: '4.1.41.Final')

	shade (group: 'commons-io', name: 'commons-io', version: '2.6')

	implementation (group: 'com.google.code.findbugs', name: 'findbugs', version: '3.0.1')

	// JSON.org
	shade (group: 'org.json', name: 'json', version: '20190722')

	implementation fileTree(dir: 'libraries', include: '*.jar')

}

configurations {
	runtime.exclude group: 'org.bstats', module: 'bstats-bukkit-lite'
}

processResources {
	from (sourceSets.main.resources.srcDirs) {
		filter ReplaceTokens, tokens: ["version": project.property("version")]
		include '**/*.yml'
	}
}

jar {
	from 'kingdoms-worldguard6/java/main'
	configurations.shade.each { dep ->
		from (project.zipTree(dep)) {
			exclude '**/*.php'
			exclude '**/*.yml'
			exclude 'META-INF', 'META-INF/**'
		}
	}
}
